{
    "statement": "Gellyfish hates math problems, but she has to finish her math homework:\nGellyfish is given an array of\nn\npositive integers\na1,a2,…,an\n.\nShe needs to do the following two-step operation until all elements of\na\nare equal:\nSelect two indexes\ni\n,\nj\nsatisfying\n1≤i,j≤n\nand\ni≠j\n.\nReplace\nai\nwith\ngcd(ai,aj)\n.\nNow, Gellyfish asks you for the minimum number of operations to achieve her goal.\nIt can be proven that Gellyfish can always achieve her goal.",
    "input_specification": "Each test contains multiple test cases. The first line contains the number of test cases\nt\n(\n1≤t≤5000\n). The description of the test cases follows.\nThe first line of each test case contains a single integer\nn\n(\n1≤n≤5000\n) — the length of the array.\nThe second line of each test case contains\nn\nintegers\na\n1\n,\na\n2\n,…,\na\nn\n(\n1≤\na\ni\n≤5000\n) — the elements of the array.\nIt is guaranteed that the sum of\nn\nover all test cases does not exceed\n5000\n.",
    "output_specification": "For each test case, output a single integer — the minimum number of operations to achieve her goal.",
    "sample_tests": [
        {
            "input": "3\n3\n12 20 30\n6\n1 9 1 9 8 1\n3\n6 14 15",
            "output": "4\n3\n3"
        }
    ],
    "note": "In the first test case, the following is a way that minimizes the number of operations:",
    "tags": [
        "constructive algorithms",
        "dp",
        "math",
        "number theory"
    ],
    "rating": "1500"
}